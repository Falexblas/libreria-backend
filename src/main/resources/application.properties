spring.application.name=Libreria Online

<<<<<<< HEAD

# ConexiÃ³n a Supabase mediante el pooler IPv4
spring.datasource.url=jdbc:postgresql://aws-1-us-east-2.pooler.supabase.com:6543/postgres?sslmode=require
spring.datasource.username=postgres.hcvglbulcnmjseyjpyve
=======
spring.datasource.url=jdbc:postgresql://aws-1-us-east-2.pooler.supabase.com:6543/postgres?sslmode=require&application_name=libreria
spring.datasource.username=app_user_2025.hcvglbulcnmjseyjpyve
>>>>>>> 3f41c15101df86cb86e8174009a844640ed1d676
spring.datasource.password=libreria2025@
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# HikariCP - Pool de conexiones optimizado para Supabase
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1

# Optimizaciones de Hibernate
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.use_get_generated_keys=true

# Serverclea
server.port=8080

# Google Gemini API Configuration
gemini.api.key=AIzaSyD5I0RWUGjW5c7M7C_pLNusxvaVnlJ6H-o
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent